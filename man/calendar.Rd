% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calendar.R
\docType{data}
\name{calendar}
\alias{calendar}
\alias{empty_calendar}
\alias{calendars}
\title{Construct a calendar}
\format{An object of class \code{vctrs_list_of} (inherits from \code{vctrs_vctr}) of length 4.}
\usage{
calendar(name = calendars$united_states)

empty_calendar(weekends = c("Saturday", "Sunday"))

calendars
}
\arguments{
\item{name}{\code{[character(1)]}

The base calendar to create. This should be one of the options listed in
\code{calendars}.}

\item{weekends}{\code{[character]}

Weekdays that should be special-cased as weekends. Weekends are considered
"holidays," and are skipped over when shifting dates forward in the
business week. Choose from:
\itemize{
\item \code{"Sunday"}
\item \code{"Monday"}
\item \code{"Tuesday"}
\item \code{"Wednesday"}
\item \code{"Thursday"}
\item \code{"Friday"}
\item \code{"Saturday"}
}}
}
\value{
\itemize{
\item \code{calendar()} returns a new calendar.
\item \code{empty_calendar()} returns a new empty calendar.
\item \code{calendars} returns a named \code{list_of<character>}.
}
}
\description{
These are various functions revolving around creating calendar objects, and
setting the default calendar.
\itemize{
\item \code{calendar()} constructs a new calendar object. There are a large
assortment of existing calendars to pick from, each with their own
pre-existing holiday list.
\item \code{empty_calendar()} constructs a special calendar that has no predefined
holidays, and no predefined business week. You can set the weekends on
creation.
\item \code{calendars} lists the set of possible calendars that can be used.
}
}
\examples{
calendar()

calendar(calendars$argentina)

empty_calendar()

empty_calendar(weekends = "Monday")

# All available calendars
calendars

}
\keyword{datasets}
